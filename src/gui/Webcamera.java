/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.DataBuffer;
import java.awt.image.WritableRaster;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfByte;
import org.opencv.core.Range;
import org.opencv.highgui.Highgui;
import org.opencv.highgui.VideoCapture;
/**
 *
 * @author VINAY MOHAN
 */
public class Webcamera extends javax.swing.JFrame {
File file;

    private DaemonThread myThread = null;
	int count = 0;
	VideoCapture webSource = null;
	
	Mat frame = new Mat();
	MatOfByte mem = new MatOfByte();
        Graphics g;
        
        int c;
            BufferedImage buff;

    
    /**
     * Creates new form snaapshoot
     */
        
        class DaemonThread implements Runnable
		{
		protected volatile boolean runnable = false;

		@Override
		public void run()
		{
			synchronized(this)
			{
				while(runnable)
				{
					if(webSource.grab())
					{
						try
						{
							webSource.retrieve(frame);
							Highgui.imencode(".bmp", frame, mem);
							Image im = ImageIO.read(new ByteArrayInputStream(mem.toArray()));

							BufferedImage buff = (BufferedImage) im;
							Graphics g=jPanel1.getGraphics();

							if (g.drawImage(buff, 0, 0, 500,300, 0, 0, buff.getWidth(), buff.getHeight(), null))
							if(runnable == false)
							{
								System.out.println("Going to wait()");
								this.wait();
							}
						}
						catch(Exception ex)
						{
							System.out.println("Error");
						}
					}
				}
			}
		}
	}
    /**
     * Creates new form Webcamera
     */
        
    public Webcamera() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 70, 500, 300);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 229, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 204, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(40, 500, 229, 204);

        jButton1.setText("start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(70, 410, 55, 23);

        jButton2.setText("capture");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(340, 410, 69, 23);

        jButton3.setText("save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(780, 400, 55, 23);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 229, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 203, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3);
        jPanel3.setBounds(290, 500, 229, 203);

        jButton4.setText("gray image");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(1120, 60, 130, 30);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 204, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel4);
        jPanel4.setBounds(790, 500, 230, 204);

        jButton5.setText("dithered image");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(1120, 110, 130, 30);

        jButton6.setText("share 2");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(1120, 210, 130, 30);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 204, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel7);
        jPanel7.setBounds(1040, 500, 230, 204);

        jButton8.setText("decrypted image");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8);
        jButton8.setBounds(1120, 340, 140, 30);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 204, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel8);
        jPanel8.setBounds(540, 500, 230, 204);

        jButton9.setText("share 1");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9);
        jButton9.setBounds(1120, 160, 130, 30);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("VISUAL CRYPTOGRAPHY TECHNIQUE FOR SECRET IMAGE RETRIEVAL");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(160, 0, 700, 60);

        jLabel2.setText("ENCRYPTION");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(1140, 10, 120, 30);

        jLabel3.setText("DECRYPTION");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(1130, 280, 130, 30);

        jLabel5.setText("ENCRYPTION OUTPUT");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 315, 107, 14);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel5);
        jPanel5.setBounds(550, 90, 500, 300);

        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(jLabel6);
        jLabel6.setBounds(40, 460, 220, 30);

        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(jLabel7);
        jLabel7.setBounds(290, 470, 220, 20);

        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(jLabel8);
        jLabel8.setBounds(540, 470, 220, 20);

        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(jLabel9);
        jLabel9.setBounds(800, 470, 220, 20);

        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(jLabel10);
        jLabel10.setBounds(1040, 474, 230, 20);
        getContentPane().add(jLabel11);
        jLabel11.setBounds(1070, 50, 210, 210);
        getContentPane().add(jLabel12);
        jLabel12.setBounds(1070, 310, 210, 100);
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 0, 1590, 760);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         webSource = new VideoCapture(0); // video capture from default cam
                myThread = new DaemonThread();
		Thread t = new Thread(myThread);
		t.setDaemon(true);
		myThread.runnable = true;
		t.start();                           // start thread of capturing
			jButton1.setEnabled(false);  //start button
		jButton2.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        myThread.runnable = false; // stop thread
		 jButton2.setEnabled(false);
		 jButton1.setEnabled(true);

		webSource.release(); 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        file = new File("C:\\Users\\VINAY MOHAN\\Documents\\NetBeansProjects\\ReadImageMain\\tutorial\\Capture.jpg");
        Highgui.imwrite(file.getPath(), frame);
        
        try
        {
            Image ig = ImageIO.read(file);
            BufferedImage bu = (BufferedImage) ig;
            Graphics ga = jPanel5.getGraphics();
            if(ga.drawImage(bu, 0, 0, 500,300, 0, 0, bu.getWidth(), bu.getHeight(), null))
            {
                
            }
        }
        catch(IOException e)
        {
            System.out.println("e");
        }
                   
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        jLabel6.setText("Gray Image");
        BufferedImage old_img = null;
        try {
            old_img = ImageIO.read(file);
        }
        catch(Exception e)
                {
                   e.printStackTrace();
                }
         BufferedImage new_img = new BufferedImage(old_img.getWidth(), old_img.getHeight(), BufferedImage.TYPE_BYTE_GRAY);
        Graphics gr =  new_img.getGraphics();
        gr.drawImage(old_img, 0, 0, null);
        gr.dispose();
         try
        {
            ImageIO.write(new_img, "jpg", file);
        }
        catch (IOException e)
                {
                   e.printStackTrace();
        }
      try
        {
            Image ig = ImageIO.read(file);
            BufferedImage bu = (BufferedImage) ig;
            Graphics ga = jPanel2.getGraphics();
            
        
            if(ga.drawImage(bu, 0, 0, 230,204, 0, 0, bu.getWidth(), bu.getHeight(), null))
            {
                
            }
        }
        catch(IOException e)
        {
            System.out.println("e");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jLabel7.setText("Dithered Image");
        
                int     i, j;
        
       
        BufferedImage new_img = null;
        
        try {
            new_img = ImageIO.read(file);
        }
        catch(Exception e)
                {
                   e.printStackTrace();
                }
       
        
        try
        {
            ImageIO.write(new_img, "jpg", file);
        }
        catch (IOException e)
                {
                   e.printStackTrace();
        }
        byte pix[] = new byte[1];
        int pixe = 0;
        int n = new_img.getWidth();
        int m = new_img.getHeight();
        int a = n*m;
        double[] [] matrix = new double[n] [m];
        int t=0;
        int row, col;
        int p[] = new int[n*m];
     
        
        for(row =0; row<n; ++row)
        {
            for(col=0; col<m; ++col)
            {
                
                new_img.getRaster().getDataElements(row, col, pix);
                matrix[row] [col] = pix[0];
                DataBuffer dataBuffer = new_img.getRaster().getDataBuffer();
                int grayLevel = dataBuffer.getElem(col * new_img.getWidth() + row);
                p[t] = grayLevel;
                t++;
                
            }
        }
       for(int w =0; w<a-1;w++)
        {
            if(p[w]<128)
            {
                
                p[w+1]=p[w]+p[w+1];
                p[w]=0;
            }
            else
            {
                p[w+1]=p[w+1]-(255-p[w]);
                p[w]=255;
            }
        }
        for(int z = 0; z<a; z++)
        {
            if(p[z]<50)
            {
                p[z]=0;
            }
            else if(p[z]>200)
            {
                p[z] = 255;
            }
            
        }
        int k=0;
        
        String path2 = "C:\\Users\\VINAY MOHAN\\Documents\\NetBeansProjects\\ReadImageMain\\tutorial\\Ditherrring.jpg";
        
        BufferedImage create = new BufferedImage(n, m, BufferedImage.TYPE_BYTE_GRAY);
        File f1 = null;
        WritableRaster raster = create.getRaster();
        
        for(row = 0; row<n; ++row)
        {
            for(col = 0; col<m; ++col)
            {
                raster.setSample(row, col, 0, p[k]);
                
                k++;
            }
        }
        try
        {
            ImageIO.write(create, "jpg", file);
        }
        catch (IOException e)
                {
                   e.printStackTrace();
        }
      try
        {
            Image ig = ImageIO.read(file);
            BufferedImage bu = (BufferedImage) ig;
            Graphics ga = jPanel3.getGraphics();
            
        
            if(ga.drawImage(bu, 0, 0, 230,204, 0, 0, bu.getWidth(), bu.getHeight(), null))
            {
                
            }
        }
        catch(IOException e)
        {
            System.out.println("e");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        jLabel9.setText("share 2");
        File file = new File("C:\\Users\\VINAY MOHAN\\Documents\\NetBeansProjects\\ReadImageMain\\tutorial\\share1.jpg");
        
        String path3 = "C:\\Users\\VINAY MOHAN\\Documents\\NetBeansProjects\\ReadImageMain\\tutorial\\share2.jpg";
      try
        {
            Image ig = ImageIO.read(new File(path3));
            BufferedImage bu = (BufferedImage) ig;
            Graphics ga = jPanel4.getGraphics();
            
        
            if(ga.drawImage(bu, 0, 0, 230,204, 0, 0, bu.getWidth(), bu.getHeight(), null))
            {
                
            }
        }
        catch(IOException e)
        {
            System.out.println("e");
        }
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        File file = new File("C:\\Users\\VINAY MOHAN\\Documents\\NetBeansProjects\\ReadImageMain\\tutorial\\constructed.jpg");
        BufferedImage old_img1 = null;
        BufferedImage old_img2 = null;
        jLabel10.setText("Decrypted Image");
        
        
        try {
            File file1 = new File("C:\\Users\\VINAY MOHAN\\Documents\\NetBeansProjects\\ReadImageMain\\tutorial\\share1.jpg");
            File file2 = new File("C:\\Users\\VINAY MOHAN\\Documents\\NetBeansProjects\\ReadImageMain\\tutorial\\share2.jpg");
            old_img1 = ImageIO.read(file1);
            old_img2 = ImageIO.read(file2);
        }
        catch(Exception e)
                {
                   e.printStackTrace();
                }
        byte pix[] = new byte[1];
        int pixe = 0;
        int n = old_img1.getWidth();
        int m = old_img1.getHeight();
        int a = n*m;
        double[] [] matrix = new double[n] [m];
        int t=0;
        int row, col;
        int share1[] = new int[n*m];
        int share2[] = new int[n*m];
     
        
        for(row =0; row<n; ++row)
        {
            for(col=0; col<m; ++col)
            {
                
                old_img1.getRaster().getDataElements(row, col, pix);
                matrix[row] [col] = pix[0];
                DataBuffer dataBuffer = old_img1.getRaster().getDataBuffer();
                int grayLevel = dataBuffer.getElem(col * old_img1.getWidth() + row);
                share1[t] = grayLevel;
                t++;
                
            }
        }
        t=0;
        for(row =0; row<n; ++row)
        {
            for(col=0; col<m; ++col)
            {
                
                
                old_img2.getRaster().getDataElements(row, col, pix);
                matrix[row] [col] = pix[0];
                DataBuffer dataBuffer = old_img2.getRaster().getDataBuffer();
                int grayLevel = dataBuffer.getElem(col * old_img2.getWidth() + row);
                share2[t] = grayLevel;
                t++;
                
            }
        }
        int p[] = new int[n*m];
     
        int l = share1.length;
         for(int j=0; j<l-1; j++)
        {
            
            if(((share1[j]<50) && (share1[j+1] >200)) && ((share2[j]>200) && (share2[j+1]<50)))
            {
                p[j]=0;
                p[j+1]=0;
                j=j+1;
            }
            else if(((share1[j]<50) && (share1[j+1] >200)) && ((share2[j]<50) && (share2[j+1]>200)))
            {
                p[j]=0;
                p[j+1]=255;
                j=j+1;
            }
            else if(((share1[j]>200) && (share1[j+1] <50)) && ((share2[j]>200) && (share2[j+1]<50)))
            {
                p[j]=255;
                p[j+1]=0;
                j=j+1;
            }
            else if(((share1[j]>200) && (share1[j+1] <50)) && ((share2[j]<50) && (share2[j+1]>200)))
            {
                p[j]=255;
                p[j+1]=255;
                j=j+1;
            }
        }
         
          int k=0;
        
        String path2 = "C:\\Users\\VINAY MOHAN\\Documents\\NetBeansProjects\\ReadImageMain\\tutorial\\constructed.jpg";
        
        BufferedImage create = new BufferedImage(n, m, BufferedImage.TYPE_BYTE_GRAY);
        File f1 = null;
        WritableRaster raster = create.getRaster();
        
        for(row = 0; row<n; ++row)
        {
            for(col = 0; col<m; ++col)
            {
                raster.setSample(row, col, 0, p[k]);
                
                k++;
            }
        }
        try
        {
            ImageIO.write(create, "jpg", file);
        }
        catch (IOException e)
                {
                   e.printStackTrace();
        }
      
        
      try
        {
            Image ig = ImageIO.read(file);
            BufferedImage bu = (BufferedImage) ig;
            Graphics ga = jPanel7.getGraphics();
            
        
            if(ga.drawImage(bu, 0, 0, 230,204, 0, 0, bu.getWidth(), bu.getHeight(), null))
            {
                
            }
        }
        catch(IOException e)
        {
            System.out.println("e");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
       jLabel8.setText("share 1");
        
         BufferedImage old_img = null;
        
        try {
            old_img = ImageIO.read(file);
        }
        catch(Exception e)
                {
                   e.printStackTrace();
                }
        byte pix[] = new byte[1];
        int pixe = 0;
        int n = old_img.getWidth();
        int m = old_img.getHeight();
        int a = n*m;
        double[] [] matrix = new double[n] [m];
        int t=0;
        int row, col;
        int p[] = new int[n*m];
     
        
        for(row =0; row<n; ++row)
        {
            for(col=0; col<m; ++col)
            {
                
                old_img.getRaster().getDataElements(row, col, pix);
                matrix[row] [col] = pix[0];
                DataBuffer dataBuffer = old_img.getRaster().getDataBuffer();
                int grayLevel = dataBuffer.getElem(col * old_img.getWidth() + row);
                p[t] = grayLevel;
                t++;
                
            }
        }
        int l = p.length;
        for(int i =0; i<l;i++)
        {
            if(p[i]<50)
            {
                p[i]=0;
            }
            else if(p[i]>200)
                    {
                        p[i]=255;
                    }
        }
        
        int[] share1 = new int[l];
        int[] share2 = new int[l];
        
        for(int j=0; j<l-1; j++)
        {
            
            if(p[j]==0 && p[j+1] == 0)
            {
                share1[j]=0;
                share1[j+1]=255;
                share2[j]=255;
                share2[j+1]=0;
                
                j=j+1;
            }
            
            else if(p[j]==0 && p[j+1]==255)
            {
                share1[j]=0;
                share1[j+1]=255;
                share2[j]=0;
                share2[j+1]=255;
                
                j=j+1;
            }
            else if(p[j]==255 && p[j]==0)
            {
                share1[j]=255;
                share1[j+1]=0;
                share2[j]=255;
                share2[j+1]=0;
                
                j=j+1;
            }
            else if(p[j]==255 && p[j]==255)
            {
                share1[j]=255;
                share1[j+1]=0;
                share2[j]=0;
                share2[j+1]=255;
               
                j=j+1;
            }
        }
        
        int k=0;
        
        String path2 = "C:\\Users\\VINAY MOHAN\\Documents\\NetBeansProjects\\ReadImageMain\\tutorial\\share1.jpg";
        String path3 = "C:\\Users\\VINAY MOHAN\\Documents\\NetBeansProjects\\ReadImageMain\\tutorial\\share2.jpg";
       
        
        BufferedImage create1 = new BufferedImage(n, m, BufferedImage.TYPE_BYTE_GRAY);
        BufferedImage create2 = new BufferedImage(n, m, BufferedImage.TYPE_BYTE_GRAY);
        
        File f1 = null;
        WritableRaster raster1 = create1.getRaster();
        WritableRaster raster2 = create2.getRaster();
        
        
        for(row = 0; row<n; ++row)
        {
            for(col = 0; col<m; ++col)
            {
                raster1.setSample(row, col, 0, share1[k]);
                raster2.setSample(row, col, 0, share2[k]);
                
               
                
                k++;
            }
        }
        try
        {
            ImageIO.write(create1, "jpg", new File(path2));
            ImageIO.write(create2, "jpg", new File(path3));
            
        }
        catch (IOException e)
                {
                   e.printStackTrace();
        }
       
      try
        {
            Image ig = ImageIO.read(new File(path2));
            BufferedImage bu = (BufferedImage) ig;
            Graphics ga = jPanel8.getGraphics();
            
        
            if(ga.drawImage(bu, 0, 0, 230,204, 0, 0, bu.getWidth(), bu.getHeight(), null))
            {
                
            }
        }
        catch(IOException e)
        {
            System.out.println("e");
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
          System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
       
        //</editor-fold>
try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Webcamera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Webcamera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Webcamera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Webcamera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Webcamera().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    // End of variables declaration//GEN-END:variables
}
